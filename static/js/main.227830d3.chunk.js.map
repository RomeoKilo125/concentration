{"version":3,"sources":["components/Card/index.js","components/CardGrid/index.js","components/ScoreBox/index.js","App.js","index.js"],"names":["Card","state","clicked","_this","props","_this2","this","react_default","a","createElement","className","src","image","alt","name","onClick","click","id","Component","CardGrid","cards","map","e","components_Card","key","ScoreBox","score","hiScore","shuffleArray","arr","Math","random","sort","b","App","resetGame","console","log","setState","c","handleClick","concat","newCards","components_ScoreBox","components_CardGrid","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"2qCAgBeA,oNAZfC,MAAQ,CACNC,QAASC,EAAKC,MAAMF,iFAEX,IAAAG,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,KAAKF,MAAMQ,MAAOC,IAAKP,KAAKF,MAAMU,KAAMC,QAAS,kBAAMV,EAAKD,MAAMY,MAAMX,EAAKD,MAAMa,eAPhFC,cCWJC,0LARJ,IAAAhB,EAAAG,KACP,OAAQC,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,YACdX,KAAKF,MAAMgB,MAAMC,IAAI,SAAAC,GAAC,OAAIf,EAAAC,EAAAC,cAACc,EAAD,CAAMC,IAAKF,EAAEL,GAAIA,GAAIK,EAAEL,GAAIf,QAASoB,EAAEpB,QAASY,KAAMQ,EAAER,KAAMF,MAAOU,EAAEV,MAAOI,MAAOb,EAAKC,MAAMY,kBAJxGE,cCWRO,0LATX,OACElB,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,YACNV,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,SAAR,UAAwBX,KAAKF,MAAMsB,OACnCnB,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,WAAR,eAA+BX,KAAKF,MAAMuB,iBAN3BT,qBCInBU,SAAe,SAAAC,GAAG,OAAIA,EAAIR,IAAI,SAAAb,GAAC,MAAI,CAACsB,KAAKC,SAAUvB,KAAIwB,KAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE,GAAKyB,EAAE,KAAIZ,IAAI,SAAAb,GAAC,OAAIA,EAAE,OAiDnF0B,6MA9CbjC,MAAQ,CACNmB,MAAOQ,EAAaR,GACpBM,MAAO,EACPC,QAAS,KAGXQ,UAAY,WACVC,QAAQC,IAAR,cACIlC,EAAKF,MAAMyB,MAAQvB,EAAKF,MAAM0B,SAChCxB,EAAKmC,SAAS,CAACX,QAASxB,EAAKF,MAAMyB,QAErCvB,EAAKmC,SAAS,CACZZ,MAAO,EACPN,MAAOQ,EAAazB,EAAKF,MAAMmB,MAAMC,IAAI,SAAAkB,GAEvC,OADAA,EAAErC,SAAU,EACLqC,UAMbC,YAAc,SAAAvB,GACZmB,QAAQC,IAAR,SAAAI,OAAqBxB,IACrB,IAAIyB,EAAWvC,EAAKF,MAAMmB,MAAMC,IAAI,SAAAkB,GAWlC,OAVIA,EAAEtB,KAAOA,KACO,IAAdsB,EAAErC,SACJqC,EAAErC,SAAU,EACZC,EAAKmC,SAAS,CACZZ,MAAOvB,EAAKF,MAAMyB,MAAQ,KAG5BvB,EAAKgC,aAGFI,IAETpC,EAAKmC,SAAS,CAAClB,MAAOQ,EAAac,8EAInC,OAAQnC,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,YAAWV,EAAAC,EAAAC,cAACkC,EAAD,CAAUjB,MAAOpB,KAAKL,MAAMyB,MAAOC,QAASrB,KAAKL,MAAM0B,UAChFpB,EAAAC,EAAAC,cAACmC,EAAD,CAAUxB,MAAOd,KAAKL,MAAMmB,MAAOJ,MAAOV,KAAKkC,sBA1CnCtB,mBCJlB2B,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.227830d3.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './style.css'\n\nclass Card extends Component {\nstate = {\n  clicked: this.props.clicked\n}\n  render() {\n    return (\n      <div className='card'>\n      <img src={this.props.image} alt={this.props.name} onClick={() => this.props.click(this.props.id)}/>\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React, {Component} from \"react\"\nimport Card from '../Card'\nimport './style.css'\n\nclass CardGrid extends Component {\n\n  render() {\n    return (<div id='cardGrid'>{\n      this.props.cards.map(e => <Card key={e.id} id={e.id} clicked={e.clicked} name={e.name} image={e.image} click={this.props.click}/>)\n    }</div>)\n\n  }\n}\n\nexport default CardGrid\n","import React, {Component} from \"react\"\nimport './style.css'\n\nclass ScoreBox extends Component {\n\n  render() {\n    return (\n      <div id='scoreBox'>\n        <div id='score'>Score: {this.props.score}</div>\n        <div id='hiScore'>High Score: {this.props.hiScore}</div>\n      </div>\n    )\n  }\n}\n\nexport default ScoreBox\n","import React, {Component} from \"react\"\nimport CardGrid from './components/CardGrid'\n// import Card from './components/Card'\nimport ScoreBox from './components/ScoreBox'\nimport cards from './cards.json'\nimport './App.css'\n\nlet shuffleArray = arr => arr.map(a => [Math.random(), a]).sort((a, b) => a[0] - b[0]).map(a => a[1])\n\nclass App extends Component {\n  state = {\n    cards: shuffleArray(cards),\n    score: 0,\n    hiScore: 0\n  }\n\n  resetGame = () => {\n    console.log(`reset game`)\n    if (this.state.score > this.state.hiScore) {\n      this.setState({hiScore: this.state.score})\n    }\n    this.setState({\n      score: 0,\n      cards: shuffleArray(this.state.cards.map(c => {\n        c.clicked = false\n        return c\n      }))\n    })\n\n  }\n\n  handleClick = id => {\n    console.log(`click ${id}`)\n    let newCards = this.state.cards.map(c => {\n      if (c.id === id) {\n        if (c.clicked === false) {\n          c.clicked = true\n          this.setState({\n            score: this.state.score + 1\n          })\n        } else {\n          this.resetGame()\n        }\n      }\n      return c\n    })\n    this.setState({cards: shuffleArray(newCards)})\n  }\n\n  render() {\n    return (<div id='gameArea'><ScoreBox score={this.state.score} hiScore={this.state.hiScore}/>\n      <CardGrid cards={this.state.cards} click={this.handleClick}/>\n    </div>)\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./reset.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}